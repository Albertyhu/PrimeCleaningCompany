---
import MainLayout from '../layouts/main-layout.astro'
import FallFromTop from "@/components/interactive/fallFromTop.astro"
import LogoGrid from '@/components/interactive/sequential-falling/index.tsx'
import clientLogos from "@/customization/client-logos.js"; 
import BackgroundVid from "@/components/cleaning-background/index.astro"; 
import WhyChooseUs from "@/components/uniqueness/index.astro"
import SmilingChild from "@/assets/images/smiling-child.jpg"
import uniqueness from "@/customization/uniqueness"; 
import Underline from '@/components/interactive/underline.astro';
import ProjectsSection from '@/components/home-page/projects-section.astro';
import ReviewSection from "@/components/home-page/reviews-section.astro"; 
import AboutSection from "@/components/home-page/about-section.astro";  
import ServicesSection from "@/components/home-page/services-section.astro"; 
import HeroBanner from '@/components/home-page/hero-banner.astro';
import experiences from "@/customization/experience.js"; 
import ExperienceCounter from '@/components/experience_section/experience_counter';

---
<MainLayout 
	title = 'Prime Cleaning - Home'
	customDescription="Elevate your living or working environment with Prime Cleaning Co. â€“ where perfection is our promise and your satisfaction is our priority."
	CTA ={true}
	>

	<!-- Banner -->
	<HeroBanner />

	<!-- Services Section -->
	<ServicesSection />

	<!-- =About Section -->
	<AboutSection />
	<!-- What People Think About Us Section -->
	<WhyChooseUs 
	image = {SmilingChild}
	reasons = {uniqueness}
	/>
	<div 
    class="w-full max-w-[1200px] mx-auto flex flex-col lg:flex-row gap-y-10 lg:justify-center items-center overflow-x-hidden no-scrollbar"
    >
    {
        experiences.map((exp, i) => {
            return(
                <ExperienceCounter text={exp.text} num={exp.num} i={i} icon={exp.icon} client:visible />
            )
        })
    }
	</div>
	<ReviewSection />
	<Underline 
		wrapperStyle="mx-auto text-center my-10 sm:my-20"
	>
		<FallFromTop>
		<h3
			class = "font-dm text-3xl"
		>Companies serviced</h3>
		</FallFromTop>
	</Underline>	
	<LogoGrid 
		data = {clientLogos}
		client:only = "react"
	/>
	<BackgroundVid />
	<!-- Projects Section -->
	<ProjectsSection />	

</MainLayout> 
 

<style>

  /* Hide scrollbar for Chrome, Safari and Opera */
  .no-scrollbar::-webkit-scrollbar {
      display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .no-scrollbar {
      -ms-overflow-style: none;  /* IE and Edge */
      scrollbar-width: none;  /* Firefox */
  }

</style>
<script is:inline>
	/* for the animations throughout the webpage*/
	const callback = (entries) => {
		entries.forEach((entry, index)=>{
			if(entry.isIntersecting){
				if(entry.target.classList.contains("fadeInFromTop"))
				{
					entry.target.classList.remove("fadeOutFromTopAnim")
				}
				if(entry.target.classList.contains("RotateInTag")){
					entry.target.children[0].classList.remove("RotateOutAnim")

				}
				if(entry.target.classList.contains("fallingTag"))
				{
					entry.target.classList.remove("startingFallingAnim")
				}
				if(entry.target.classList.contains("fadeInTag"))
				{
					entry.target.classList.remove("fadeOut")
				}
				if(entry.target.classList.contains("underlineTag"))
				{
					entry.target.classList.remove("underline-hidden")
				}
				if(entry.target.classList.contains("spinGrowTag"))
				{
					entry.target.classList.remove("spinGrowHidden")
				}
			}
			else{
				if(entry.target.classList.contains("fadeInFromTop")){
					entry.target.classList.add("fadeOutFromTopAnim")
				}
				if(entry.target.classList.contains("RotateInTag")){
					entry.target.children[0].classList.add("RotateOutAnim")

				}
				if(entry.target.classList.contains("fallingTag"))
				{
					entry.target.classList.add("startingFallingAnim")
				}
				if(entry.target.classList.contains("fadeInTag"))
				{
					entry.target.classList.add("fadeOut")
				}
				if(entry.target.classList.contains("underlineTag"))
				{
					entry.target.classList.add("underline-hidden")
				}
				if(entry.target.classList.contains("spinGrowTag"))
				{
					entry.target.classList.add("spinGrowHidden")
				}
			}
		})
	}
	const options = {
		threshold: 0.1, 
	} 

	const observer = new IntersectionObserver(callback, options)
	const fadeInFromTop = document.getElementsByClassName("fadeInFromTop")
	for(var i = 0; i < fadeInFromTop.length; i++){
			observer.observe(fadeInFromTop[i])
	}
	const RotateIn = document.getElementsByClassName("RotateInTag")
	for(var i = 0; i < RotateIn.length; i++){
			observer.observe(RotateIn[i])
	}

	const FallFromTop = document.getElementsByClassName("fallingTag ")
	for(var i = 0; i < FallFromTop.length; i++){
			observer.observe(FallFromTop[i])
	}

	const FadeIn = document.getElementsByClassName("fadeInTag");
	for(var i = 0; i < FadeIn.length; i++){
			observer.observe(FadeIn[i])
	}

	const Underline = document.getElementsByClassName("underlineTag");
	for(var i = 0; i < Underline.length; i++){
			observer.observe(Underline[i])
	}

	const SpinGrow = document.getElementsByClassName("spinGrowTag");
	for(var i = 0; i < SpinGrow.length; i++){
			observer.observe(SpinGrow[i])
	}

</script>